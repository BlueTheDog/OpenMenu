// <auto-generated />
using System;
using Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Web.Migrations
{
    [DbContext(typeof(OpenMenuContext))]
    partial class OpenMenuContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.12");

            modelBuilder.Entity("Domain.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1500)
                        .HasColumnType("TEXT");

                    b.Property<int>("MenuTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MenuTypeId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2022, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2310),
                            Description = "La 5 to go folosim o cafea cu o aromă intensă, corpolentă , cremoasă ce se constituie într-un blend unic, creat special pentru lanţul de cafenele 5 to go.",
                            MenuTypeId = 2,
                            Name = "5ToGo"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2022, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2311),
                            Description = "Starbucks Corporation is an American multinational chain of coffeehouses and roastery reserves headquartered in Seattle, Washington. ",
                            MenuTypeId = 2,
                            Name = "Starbucks"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2022, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2312),
                            Description = "Colaborăm şi susţinem ferme care respectă fructul de cafea, dar mai mult, respectă oamenii implicaţi în povestea cafelei.",
                            MenuTypeId = 2,
                            Name = "NarCoffee"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2022, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2313),
                            Description = "O cafea arabica, aromata, tare. Cam tot ce aștepți de la o cafea. Plus ca ii ajuți și pe micii fermieri cumpărând-o. ",
                            MenuTypeId = 2,
                            Name = "Cafetarie"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2022, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2313),
                            Description = "Cele șase locații Marty Restaurants sunt asemănătoare în esență, dar fiecare dintre ele propune o atmosferă unică. ",
                            MenuTypeId = 1,
                            Name = "Marty Restaurants"
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2022, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2314),
                            Description = "Mereu delicios",
                            MenuTypeId = 1,
                            Name = "Boulevard"
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2315),
                            Description = "Mâncarea e delicioasa, ca la mama acasă, proaspătă și servita fără întârziere.",
                            MenuTypeId = 1,
                            Name = "Curtea Veche"
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2022, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2315),
                            MenuTypeId = 1,
                            Name = "Casa Romaneasca"
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2022, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2316),
                            MenuTypeId = 3,
                            Name = "Dacia Service"
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2022, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2316),
                            MenuTypeId = 3,
                            Name = "Renault Service"
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(2022, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2317),
                            MenuTypeId = 3,
                            Name = "Mercedes Service"
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2318),
                            MenuTypeId = 3,
                            Name = "BMW Service"
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(2022, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2318),
                            MenuTypeId = 3,
                            Name = "Tesla Service"
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(2022, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2319),
                            MenuTypeId = 2,
                            Name = "Cafeneaua de la colt"
                        },
                        new
                        {
                            Id = 15,
                            DateCreated = new DateTime(2022, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2320),
                            MenuTypeId = 2,
                            Name = "Happy Beans"
                        },
                        new
                        {
                            Id = 16,
                            DateCreated = new DateTime(2022, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2320),
                            MenuTypeId = 1,
                            Name = "All u can eat"
                        },
                        new
                        {
                            Id = 17,
                            DateCreated = new DateTime(2022, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2321),
                            MenuTypeId = 1,
                            Name = "Moldovan"
                        });
                });

            modelBuilder.Entity("Domain.Entities.MenuType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MenuTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2022, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2234),
                            Name = "RestaurantX"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2022, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2235),
                            Name = "Cafenea"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2022, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2022, 12, 15, 16, 11, 40, 206, DateTimeKind.Utc).AddTicks(2236),
                            Name = "Atelier auto"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Location", b =>
                {
                    b.HasOne("Domain.Entities.MenuType", "MenuType")
                        .WithMany("Locations")
                        .HasForeignKey("MenuTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuType");
                });

            modelBuilder.Entity("Domain.Entities.MenuType", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
